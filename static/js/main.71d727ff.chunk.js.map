{"version":3,"sources":["model/status.ts","components/Divisor/index.ts","components/SearchBar/style.ts","components/SearchBar/index.tsx","api/transaction.ts","components/TransactionTable/style.ts","components/TransactionTable/index.tsx","pages/TransactionSearch/style.ts","pages/TransactionSearch/index.tsx","components/StatusBar/style.ts","components/StatusBar/index.tsx","components/ModalContainer/index.ts","pages/TransactionDetails/style.ts","pages/TransactionDetails/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TransactionStatus","Divisor","styled","hr","SearchBarInput","input","SearchBar","props","onChange","placeholder","baseURL","process","getTransactionStatusName","status","empty","TableRow","tr","TransactionTableContainer","table","TableColumn","td","TableHeaderColumn","AmountColumn","div","TableHeader","DetailsLink","id","children","location","useLocation","pathname","to","state","background","TableItem","transaction","title","description","amount","date","TransactionTable","transactions","map","t","i","LogoContainer","TransactionSearchContainer","TransactionSearchPage","useState","term","setTerm","setTransactions","useEffect","Promise","resolve","reject","axios","get","then","response","data","sort","a","b","orderByDate","catch","e","target","value","StatusBarContainer","StatusBarProgression","StatusList","StatusItem","StatusBar","statuses","created","processing","processed","progress","indexOf","type","min","max","readOnly","s","fadein","keyframes","BackdropContainer","ModalContainer","CloseDetails","button","TransactionTitle","h1","TransactionSubtitle","h2","TransactionText","AggregatedContainer","TransactionDetailsContainer","TransactionDetailsPage","history","useHistory","useParams","setTransaction","getTransactionDetails","downHandler","useCallback","key","stopPropagation","goBack","window","addEventListener","removeEventListener","from","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.71d727ff.chunk.js","sourcesContent":["\nexport enum TransactionStatus {\n    created = \"Solicitada\" as any,\n    processing = \"Processando\" as any,\n    processed = \"Concluída\" as any,\n    empty = \"\" as any\n}\n\nexport const getTransactionStatusName = (status: TransactionStatus) => {\n    const key = ((status as unknown) as TransactionStatus);\n    if (key) {\n        return (TransactionStatus[key] as unknown) as TransactionStatus;\n    }\n\n    return TransactionStatus.empty;\n}\n\nexport const getStatusListOfValues = () => {\n    return [TransactionStatus.created, TransactionStatus.processing, TransactionStatus.processed]\n}","import styled from 'styled-components';\n\nexport const Divisor = styled.hr`\n    color: #DDDDDD;\n    width: fill-available;\n`;","import styled from 'styled-components';\n\nexport const SearchBarInput = styled.input`\n    width: 200px;\n    border-radius: 3px;\n`;","import { SearchBarInput } from './style';\n\ninterface SearchBarProps {\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport const SearchBar = (props: SearchBarProps) => {\n    const { onChange } = props;\n    return (\n        <SearchBarInput placeholder=\"Pesquise pelo titulo\" onChange={onChange} />\n    );\n}","import axios from 'axios';\nimport { Transaction } from '../model/transaction';\n\ninterface TransactionListResponse {\n    data: Transaction[]\n}\n\ninterface TransactionDetailsResponse {\n    data: Transaction\n}\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nconst orderByDate = (transactions: Transaction[]) => {\n    return transactions.sort((a, b) => a.date < b.date ? -1 : 1);\n};\n\nexport const getTransactionList = () => new Promise<Transaction[]>((resolve, reject) => {\n    axios.get(`${baseURL}/transactions`).then((response: TransactionListResponse) => {\n        const transactions = response.data;\n        resolve(orderByDate(transactions));\n    }).catch(() => {\n        reject([])\n    });\n});\n\nexport const getTransactionDetails = (id: string) => new Promise<Transaction>((resolve, reject) => {\n    axios.get(`${baseURL}/transactions/${id}`).then((response: TransactionDetailsResponse) => {\n        resolve(response.data);\n    }).catch(() => {\n        reject(null);\n    });\n});","import styled from \"styled-components\";\n\nexport const TableRow = styled.tr`\n    &:nth-child(2n) {\n        background-color: #DEDEDE;\n        border-color: #DEDEDE;\n    }\n`;\n\nexport const TransactionTableContainer = styled.table`\n    margin: 32px;\n    border: 1px solid #ECECEC;\n    border-spacing: 0;\n    border-collapse: collapse;\n`;\n\nexport const TableColumn = styled.td`\n    font-size: 12px;\n    padding: 2px 8px;\n\n    @media(min-width: 1024px) {\n        font-size: 16px;\n        padding: 8px 16px;\n    }\n`;\n\nexport const TableHeaderColumn = styled(TableColumn)`\n    font-weight: bold;\n`;\n\nexport const AmountColumn = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;","import { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport { Transaction } from '../../model/transaction';\nimport { LocationState } from '../../model/location';\nimport { getTransactionStatusName } from '../../model/status';\nimport {\n    TableRow,\n    TableColumn,\n    AmountColumn,\n    TableHeaderColumn,\n    TransactionTableContainer\n} from './style';\n\ninterface TransactionTableProps {\n    transactions: Transaction[]\n}\n\ninterface TransactionItemProps {\n    transaction: Transaction\n}\n\ninterface DetailsLinkProps {\n    id: string,\n    children: React.ReactNode\n}\n\nconst TableHeader = () => {\n    return (\n        <TableRow>\n            <TableHeaderColumn>Título</TableHeaderColumn>\n            <TableHeaderColumn>Descrição</TableHeaderColumn>\n            <TableHeaderColumn>Status</TableHeaderColumn>\n            <TableHeaderColumn>Valor</TableHeaderColumn>\n            <TableHeaderColumn>Data</TableHeaderColumn>\n        </TableRow>\n    );\n};\n\nconst DetailsLink = (props: DetailsLinkProps) => {\n    const { id, children } = props;\n    const location = useLocation<LocationState>();\n    const pathname = `/transaction/${id}`;\n\n    return (\n        <Link data-id={id} to={{ pathname, state: { background: location } }}>\n            {children}\n        </Link>\n    );\n};\n\nconst TableItem = (props: TransactionItemProps) => {\n    const { transaction } = props;\n    return (\n        <TableRow>\n            <TableColumn>\n                <DetailsLink id={transaction.id}>{transaction.title}</DetailsLink>\n            </TableColumn>\n            <TableColumn>{transaction.description}</TableColumn>\n            <TableColumn>{getTransactionStatusName(transaction.status)}</TableColumn>\n            <TableColumn>\n                <AmountColumn>\n                    <span>R$</span> <span>{transaction.amount}</span>\n                </AmountColumn>\n            </TableColumn>\n            <TableColumn>\n                {transaction.date}\n            </TableColumn>\n        </TableRow>\n    );\n};\n\nexport const TransactionTable = (props: TransactionTableProps) => {\n    const { transactions } = props;\n    return (\n        <TransactionTableContainer>\n            <thead>\n                <TableHeader />\n            </thead>\n            <tbody>\n                { transactions.map((t, i) => <TableItem key={i} transaction={t} />) }\n            </tbody>\n        </TransactionTableContainer>\n    );\n};","import styled from 'styled-components';\n\nexport const LogoContainer = styled.div`\n    height: 80px;\n`;\n\nexport const TransactionSearchContainer = styled.div`\n    width: 80%;\n    margin: auto;\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n`;","import { useEffect, useState } from 'react';\nimport { Divisor } from '../../components/Divisor';\nimport { SearchBar } from '../../components/SearchBar';\nimport { Transaction } from '../../model/transaction';\nimport { getTransactionList } from '../../api/transaction';\nimport { TransactionTable } from '../../components/TransactionTable';\n\nimport {\n    LogoContainer,\n    TransactionSearchContainer\n} from './style';\n\nconst TransactionSearchPage = () => {\n    const [ term, setTerm ] = useState<string>(\"\");\n    const [ transactions, setTransactions ] = useState<Transaction[]>([]);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setTerm(e.target.value);\n    };\n\n    useEffect(() => {\n        getTransactionList().then((response: Transaction[]) => {\n            setTransactions(response);\n        });\n    }, []);\n\n    return (\n        <div>\n            <div>{term}</div>\n            <LogoContainer />\n            <Divisor />\n\n            <TransactionSearchContainer>\n                <SearchBar onChange={onChange}/>\n                <TransactionTable transactions={transactions} />\n            </TransactionSearchContainer>\n        </div>\n    );\n}\n\nexport default TransactionSearchPage;","import styled from 'styled-components';\n\nexport const StatusBarContainer = styled.div`\n    width: 100%;\n    margin-bottom: 56px;\n`;\n\nexport const StatusBarProgression = styled.input`\n    width: 100%;\n    height: 30px;\n    user-select: none;\n    border-radius: 3px;\n    background-color: #CECECE;\n`;\n\nexport const StatusList = styled.div`\n    width: 100%;\n    display: flex;\n    margin-top: 8px;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StatusItem = styled.div`\n    font-size: 14px;\n\n    @media(min-width: 1024px) {\n        font-size: 16px;\n    }\n`;","import { TransactionStatus, getStatusListOfValues, getTransactionStatusName } from '../../model/status';\n\nimport {\n    StatusList,\n    StatusItem,\n    StatusBarContainer,\n    StatusBarProgression\n} from './style';\n\ninterface StatusBarProps {\n    status: TransactionStatus\n}\n\nexport const StatusBar = (props: StatusBarProps) => {\n    const { status } = props;\n    const statuses = getStatusListOfValues();\n    const progress = 50 * (statuses.indexOf(getTransactionStatusName(status)));\n    return (\n        <StatusBarContainer>\n            <StatusBarProgression type=\"range\" value={progress} min={0} max={100} readOnly />\n\n            <StatusList>\n                {statuses.map((s, i) =>\n                    <StatusItem key={i}>{s}</StatusItem>\n                )}\n            </StatusList>\n        </StatusBarContainer>\n    );\n};","import styled, { keyframes } from \"styled-components\"\n\nconst fadein = keyframes`\n    0% {opacity: 0;}\n    100% {opacity: 1;}\n`;\n\nconst BackdropContainer = styled.div`\n    top: 0;\n    left: 0;\n    position: fixed;\n\n    width: 100vw;\n    height: 100vh;\n\n    z-index: 1;\n`;\n\nexport const ModalContainer = styled(BackdropContainer)`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    background: rgba(0, 0, 0, 0.8);\n    animation: ${fadein} .5s linear;\n`;","import styled from 'styled-components';\n\nexport const CloseDetails = styled.button`\n    position: absolute;\n\n    top: 10px;\n    right: 10px;\n\n    background: transparent;\n    border: 1px black solid;\n    border-radius: 45%;\n`;\n\nexport const TransactionTitle = styled.h1`\n    font-size: 32px;\n    text-align: center;\n    font-weight: bold;\n    width: fill-available;\n\n    @media(min-width: 1024px) {\n        font-size: 42px;\n    }\n`;\n\nexport const TransactionSubtitle = styled.h2`\n    font-size: 20px;\n    font-weight: normal;\n    margin-bottom: 0px;\n    width: fill-available;\n\n    @media(min-width: 1024px) {\n        font-size: 24px;\n    }\n`;\n\nexport const TransactionText = styled.div`\n    font-size: 14px;\n    width: fill-available;\n\n    @media(min-width: 1024px) {\n        font-size: 16px;\n    }\n`;\n\nexport const AggregatedContainer = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-around;\n`;\n\nexport const TransactionDetailsContainer = styled.div`\n    position: fixed;\n\n    top: 60px;\n    left: 12px;\n    right: 12px;\n    bottom: 16px;\n\n    padding: 0 56px;\n    background: white;\n    border-radius: 16px;\n\n    @media(min-width: 1024px) {\n        top: 20%;\n        left: 20%;\n        right: 20%;\n        bottom: 20%;\n\n        padding: 0 80px;\n    }\n`;","import { useEffect, useState, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { StatusBar } from '../../components/StatusBar';\nimport { Transaction } from '../../model/transaction';\nimport { ModalContainer } from '../../components/ModalContainer';\nimport { getTransactionDetails } from '../../api/transaction';\n\nimport { Divisor } from '../../components/Divisor';\nimport {\n    CloseDetails,\n    TransactionText,\n    TransactionTitle,\n    TransactionSubtitle,\n    AggregatedContainer,\n    TransactionDetailsContainer\n} from './style';\n\ninterface TransactionDetailsProps {\n    id: string\n}\n\nconst TransactionDetailsPage = () => {\n    const history = useHistory();\n    const { id } = useParams<TransactionDetailsProps>();\n    const [ transaction, setTransaction ] = useState<Transaction | null>(null);\n\n    useEffect(() => {\n        getTransactionDetails(id).then((response: Transaction) => {\n            setTransaction(response);\n        });\n    }, [id]);\n\n    const downHandler = useCallback((e) => {\n        if (e.key === \"Backspace\" || e.key === \"Escape\") {\n            e.stopPropagation();\n            history.goBack();\n        }\n    }, [history]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", downHandler);\n        return () => {\n            window.removeEventListener(\"keydown\", downHandler);\n        }\n    }, [downHandler]);\n\n    const closeModal = () => {\n        history.goBack();\n    };\n\n    if (!transaction) {\n        // TODO how to handle this\n        return (<div>NULO</div>);\n    }\n\n    const { title, status, amount, from, to } = transaction;\n    return (\n        <ModalContainer>\n            <TransactionDetailsContainer>\n                <CloseDetails onClick={closeModal}>X</CloseDetails>\n\n                <TransactionTitle>{title}</TransactionTitle>\n\n                <StatusBar status={status} />\n\n                <TransactionSubtitle>Valor</TransactionSubtitle>\n                <Divisor />\n\n                <TransactionText>R$ {amount}</TransactionText>\n\n                <AggregatedContainer>\n                    <TransactionSubtitle>Transferido de</TransactionSubtitle>\n                    <TransactionSubtitle>Para</TransactionSubtitle>\n                </AggregatedContainer>\n                <Divisor />\n\n                <AggregatedContainer>\n                    <TransactionText>{from}</TransactionText>\n                    <TransactionText>{to}</TransactionText>\n                </AggregatedContainer>\n            </TransactionDetailsContainer>\n        </ModalContainer>\n    );\n}\n\nexport default TransactionDetailsPage;","import './App.css';\nimport TransactionSearchPage from './pages/TransactionSearch';\nimport TransactionDetailsPage from './pages/TransactionDetails';\nimport { LocationState } from './model/location';\nimport {\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\n\nconst App = () => {\n  const location = useLocation<LocationState>();\n  const background = location.state && location.state.background;\n\n  return (\n    <>\n      <Switch location={background || location}>\n        <Route exact path='/' component={TransactionSearchPage} />\n      </Switch>\n\n      { background && <Route path='/transaction/:id' component={TransactionDetailsPage} />}\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}